<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on 习七</title><link>https://it-boyer.github.io/tags/git/</link><description>Recent content in Git on 习七</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>itboyer@qq.com (iTBoyer)</managingEditor><webMaster>itboyer@qq.com (iTBoyer)</webMaster><lastBuildDate>Fri, 12 Oct 2018 19:56:59 +0000</lastBuildDate><atom:link href="https://it-boyer.github.io/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>brew升级git版本</title><link>https://it-boyer.github.io/post/old/git/brew%E5%8D%87%E7%BA%A7git%E7%89%88%E6%9C%AC/</link><pubDate>Fri, 12 Oct 2018 19:56:59 +0000</pubDate><author>itboyer@qq.com (iTBoyer)</author><guid>https://it-boyer.github.io/post/old/git/brew%E5%8D%87%E7%BA%A7git%E7%89%88%E6%9C%AC/</guid><description>1 2 3 4 $ brew doctor $ brew install git $ brew link --overwrite git Linking /usr/local/Cellar/git/2.19.1... 216 symlinks created</description></item><item><title>git-lfs命令工具使用</title><link>https://it-boyer.github.io/post/old/git/git-lfs%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</link><pubDate>Thu, 11 Oct 2018 17:58:15 +0000</pubDate><author>itboyer@qq.com (iTBoyer)</author><guid>https://it-boyer.github.io/post/old/git/git-lfs%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</guid><description>{% github git-lfs git-lfs 45c4568 width = 30% %} git-lfs官网 LFS其实是git的一个扩展，并没有改变git的工作方式，有点像耍了个小花招，把指定需要lfs管理的文件</description></item><item><title>gist命令工具使用</title><link>https://it-boyer.github.io/post/old/git/gist%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</link><pubDate>Thu, 11 Oct 2018 17:17:52 +0000</pubDate><author>itboyer@qq.com (iTBoyer)</author><guid>https://it-boyer.github.io/post/old/git/gist%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</guid><description>{% github defunkt gist 8d86604 width = 30% %} 按照gist 安装gist 1 brew install gist 创建gist 上传a.rb中的代码段： 1 gist a.rb 上传多个文件a.rb,b.rb,c.rb的代码段</description></item><item><title>subtree拆分大的git库到多个独立git库</title><link>https://it-boyer.github.io/post/old/git/subtree%E6%8B%86%E5%88%86%E5%A4%A7%E7%9A%84git%E5%BA%93%E5%88%B0%E5%A4%9A%E4%B8%AA%E7%8B%AC%E7%AB%8Bgit%E5%BA%93/</link><pubDate>Tue, 09 Oct 2018 12:07:55 +0000</pubDate><author>itboyer@qq.com (iTBoyer)</author><guid>https://it-boyer.github.io/post/old/git/subtree%E6%8B%86%E5%88%86%E5%A4%A7%E7%9A%84git%E5%BA%93%E5%88%B0%E5%A4%9A%E4%B8%AA%E7%8B%AC%E7%AB%8Bgit%E5%BA%93/</guid><description>Git 仓库拆拆拆 拆分一个子目录为独立仓库 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 这就是那个大仓库 big-project $ git clone git@github.com:tom/big-project.git $ cd big-project # 把所有 `codes-eiyo` 目录下的相关提交整理为一个新的分</description></item><item><title>git-log的使用</title><link>https://it-boyer.github.io/post/old/git/git-log%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Wed, 05 Sep 2018 15:52:33 +0000</pubDate><author>itboyer@qq.com (iTBoyer)</author><guid>https://it-boyer.github.io/post/old/git/git-log%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>trello 卡片 git log使用 查看提交历史 来看一个实际的例子，如果要查看 Git 仓库中，2008 年 10 月期间，Junio Hamano 提交的但未合并的测试脚本（位于项目的 t/</description></item><item><title>使用tag管理多个相关组件的版本发布</title><link>https://it-boyer.github.io/post/old/git/%E4%BD%BF%E7%94%A8tag%E7%AE%A1%E7%90%86%E5%A4%9A%E4%B8%AA%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83/</link><pubDate>Wed, 20 Jun 2018 17:22:37 +0000</pubDate><author>itboyer@qq.com (iTBoyer)</author><guid>https://it-boyer.github.io/post/old/git/%E4%BD%BF%E7%94%A8tag%E7%AE%A1%E7%90%86%E5%A4%9A%E4%B8%AA%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83/</guid><description>tag标签自增新建脚本 1 2 3 4 5 6 #!/bin/sh tag=$(git describe --tags `git rev-list --tags --max-count=1`) version=${tag##*.} let &amp;#34;version+=1&amp;#34; newTag=${tag%.*}.${version} echo &amp;#39;Create New Tag &amp;#39;$newTag 修改tag版本号的方法 方法一：覆盖 已有v1.0.2.8要覆盖该版本 1 git tag</description></item><item><title>Git如何永久删除文件(包括历史记录)</title><link>https://it-boyer.github.io/post/old/git/Git%E5%A6%82%E4%BD%95%E6%B0%B8%E4%B9%85%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%8C%85%E6%8B%AC%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</link><pubDate>Mon, 11 Jun 2018 20:32:02 +0000</pubDate><author>itboyer@qq.com (iTBoyer)</author><guid>https://it-boyer.github.io/post/old/git/Git%E5%A6%82%E4%BD%95%E6%B0%B8%E4%B9%85%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%8C%85%E6%8B%AC%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</guid><description>有些时候不小心上传了一些敏感文件(例如密码), 或者不想上传的文件(没及时或忘了加到.gitignore里的), 而且上传的文件又特别大的时候,</description></item><item><title>Git工具交互式暂存</title><link>https://it-boyer.github.io/post/old/git/Git%E5%B7%A5%E5%85%B7%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%9A%82%E5%AD%98/</link><pubDate>Thu, 12 Apr 2018 19:41:46 +0000</pubDate><author>itboyer@qq.com (iTBoyer)</author><guid>https://it-boyer.github.io/post/old/git/Git%E5%B7%A5%E5%85%B7%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%9A%82%E5%AD%98/</guid><description>交互式暂存 Git 自带的一些脚本可以使在命令行下工作更容易。 本节的几个互交命令可以帮助你将文件的特定部分组合成提交。 当你修改一组文件后，希望这些改</description></item><item><title>当项目过大需要通过SSH方式Clone</title><link>https://it-boyer.github.io/post/old/git/%E5%BD%93%E9%A1%B9%E7%9B%AE%E8%BF%87%E5%A4%A7%E9%9C%80%E8%A6%81%E9%80%9A%E8%BF%87SSH%E6%96%B9%E5%BC%8FClone/</link><pubDate>Wed, 04 Apr 2018 17:44:24 +0000</pubDate><author>itboyer@qq.com (iTBoyer)</author><guid>https://it-boyer.github.io/post/old/git/%E5%BD%93%E9%A1%B9%E7%9B%AE%E8%BF%87%E5%A4%A7%E9%9C%80%E8%A6%81%E9%80%9A%E8%BF%87SSH%E6%96%B9%E5%BC%8FClone/</guid><description>设置全局提交信息 1 2 git config --global user.email &amp;#34;you@example.com&amp;#34; git config --global user.name &amp;#34;Your Name&amp;#34; 修改最后一次提交的用户名信息 ``git git config user.name &amp;lsquo;wangz&amp;rsquo; git config user.email &amp;lsquo;wangz@alib.com&amp;rsquo; git commit &amp;ndash;amend &amp;ndash;author=wangz 1 2 3 4 5 6 7 8 9 10 11 12 13 ### 项目过大问题 &amp;gt;git clone</description></item><item><title>SubModule与SubTree的差异</title><link>https://it-boyer.github.io/post/old/git/SubModule%E4%B8%8ESubTree%E7%9A%84%E5%B7%AE%E5%BC%82/</link><pubDate>Wed, 17 May 2017 11:23:22 +0000</pubDate><author>itboyer@qq.com (iTBoyer)</author><guid>https://it-boyer.github.io/post/old/git/SubModule%E4%B8%8ESubTree%E7%9A%84%E5%B7%AE%E5%BC%82/</guid><description>核心区别 git submodule类似于引用，而git subtree类似于拷贝，比如你在一篇博客中想用到你另一篇博客的内容，git submodul</description></item></channel></rss>